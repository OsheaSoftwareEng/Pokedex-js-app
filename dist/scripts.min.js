const pokemonRepository = (function () {
  let t = [];
  function e(e) {
    t.push(e);
  }
  function n() {
    return t;
  }
  function o(t) {
    pokemonRepository.loadDetails(t).then(function () {
      let e = $(".modal-body"),
        n = $(".modal-title");
      $(".modal-header"), e.empty(), n.empty();
      let o = $("<h1>" + t.name + "</h1>"),
        i = $('<p class= "poke-height">Height: ' + t.height + "</p>"),
        a = $("<p>Abilities: </p>");
      a.addClass("abilities-text");
      let l = $('<p class= "poke-weight">Weight: ' + t.weight + "</p>"),
        p = $('<img class= "modal-image">');
      p.attr("src", t.imageUrl);
      let s = "";
      t.types.forEach(function (t) {
        s += ['<p class="poke-type">' + t.type.name + "</p>"];
      });
      let r = "";
      t.abilities.forEach(function (t) {
        r += ['<li class="poke-abilities">' + t.ability.name + "</li>"];
      }),
        n.append(o),
        e.append(p),
        e.append(i),
        e.append(l),
        e.append(s),
        e.append(r),
        e.append(a);
    });
  }
  let i = document.querySelector("#search-bar");
  return (
    i.addEventListener("input", function () {
      pokemonRepository.filterSearch(i);
    }),
    {
      add: e,
      getAll: n,
      loadList: function t() {
        return fetch("https://pokeapi.co/api/v2/pokemon/?limit=150")
          .then(function (t) {
            return t.json();
          })
          .then(function (t) {
            t.results.forEach(function (t) {
              let n = { name: t.name, detailsUrl: t.url };
              e(n);
            });
          })
          .catch(function (t) {
            console.error(t);
          });
      },
      addListItem: function t(e) {
        let n = $(".pokemon-list"),
          i = $('<li class= "list-group-item"> </li>'),
          a = $(
            '<button class="pokemon-button" data-toggle="modal" data-target="#myModal">' +
              e.name +
              "</button>"
          );
        n.append(a),
          i.append(a),
          n.append(i),
          a.on("click", function (t) {
            o(e);
          });
      },
      loadDetails: function t(e) {
        let n = e.detailsUrl;
        return fetch(n)
          .then(function (t) {
            return t.json();
          })
          .then(function (t) {
            (e.imageUrl = t.sprites.front_default),
              (e.height = t.height),
              (e.weight = t.weight),
              (e.abilities = t.abilities),
              (e.types = t.types);
          })
          .catch(function (t) {
            console.error(t);
          });
      },
      showDetails: function t(e) {
        pokemonRepository.loadDetails(e).then(function () {
          button.addEventListener("click", () => {
            o(e);
          });
        });
      },
      showModal: o,
      filterSearch: function e(n) {
        let o = n.value.toLowerCase(),
          i = t.filter(function (t) {
            return t.name.toLowerCase().indexOf(o) > -1;
          }),
          a = document.querySelector(".pokemon-list");
        (a.innerHTML = ""),
          i.forEach(function (t) {
            pokemonRepository.addListItem(t);
          });
      },
    }
  );
})();
pokemonRepository.loadList().then(function () {
  pokemonRepository.getAll().forEach(function (t) {
    pokemonRepository.addListItem(t);
  });
});
